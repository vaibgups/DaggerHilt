// Generated by Dagger (https://dagger.dev).
package com.example.daggerhilt;

import com.example.daggerhilt.demo.Car;
import com.example.daggerhilt.demo.Main;
import com.example.daggerhilt.demo.Main2;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainActivity_MembersInjector implements MembersInjector<MainActivity> {
  private final Provider<Car> carProvider;

  private final Provider<Main> mainProvider;

  private final Provider<Main2> main2Provider;

  public MainActivity_MembersInjector(Provider<Car> carProvider, Provider<Main> mainProvider,
      Provider<Main2> main2Provider) {
    this.carProvider = carProvider;
    this.mainProvider = mainProvider;
    this.main2Provider = main2Provider;
  }

  public static MembersInjector<MainActivity> create(Provider<Car> carProvider,
      Provider<Main> mainProvider, Provider<Main2> main2Provider) {
    return new MainActivity_MembersInjector(carProvider, mainProvider, main2Provider);
  }

  @Override
  public void injectMembers(MainActivity instance) {
    injectCar(instance, carProvider.get());
    injectMain(instance, mainProvider.get());
    injectMain2(instance, main2Provider.get());
  }

  @InjectedFieldSignature("com.example.daggerhilt.MainActivity.car")
  public static void injectCar(MainActivity instance, Car car) {
    instance.car = car;
  }

  @InjectedFieldSignature("com.example.daggerhilt.MainActivity.main")
  public static void injectMain(MainActivity instance, Main main) {
    instance.main = main;
  }

  @InjectedFieldSignature("com.example.daggerhilt.MainActivity.main2")
  public static void injectMain2(MainActivity instance, Main2 main2) {
    instance.main2 = main2;
  }
}
