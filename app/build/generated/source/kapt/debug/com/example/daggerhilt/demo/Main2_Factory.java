// Generated by Dagger (https://dagger.dev).
package com.example.daggerhilt.demo;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class Main2_Factory implements Factory<Main2> {
  private final Provider<String> fNameProvider;

  private final Provider<String> lNameProvider;

  public Main2_Factory(Provider<String> fNameProvider, Provider<String> lNameProvider) {
    this.fNameProvider = fNameProvider;
    this.lNameProvider = lNameProvider;
  }

  @Override
  public Main2 get() {
    return newInstance(fNameProvider.get(), lNameProvider.get());
  }

  public static Main2_Factory create(Provider<String> fNameProvider,
      Provider<String> lNameProvider) {
    return new Main2_Factory(fNameProvider, lNameProvider);
  }

  public static Main2 newInstance(String fName, String lName) {
    return new Main2(fName, lName);
  }
}
